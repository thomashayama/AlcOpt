services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 8912:8501
    volumes:
      # - .:/app
      - ./data:/data
    environment:
      - SECRETS_FILE=/app/secrets.toml
    command: ["python", "-m", "streamlit", "run", "./alcopt/app/Home.py"]
    # command: ["sleep", "infinity"]
    restart: unless-stopped

  app-dev:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 8913:8501
    volumes:
      - .:/app
      - ./data:/data
    environment:
      - SECRETS_FILE=/app/secrets.dev.toml
    command: ["python", "-m", "streamlit", "run", "./alcopt/app/Home.py", "--server.port=8501", "--server.fileWatcherType=watchdog"]
    restart: unless-stopped
  
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt  # SSL Certificates
      - /var/lib/letsencrypt:/var/lib/letsencrypt  # Certbot Data
      - /var/log/letsencrypt:/var/log/letsencrypt  # Certbot Logs
      - /opt/nginx/certbot:/opt/nginx/certbot # Certbot
    restart: always

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/lib/letsencrypt:/var/lib/letsencrypt
  #     - /var/log/letsencrypt:/var/log/letsencrypt
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --nginx --quiet; sleep 12h & wait $${!}; done'"
  #   restart: always

networks:
  local-network:
    driver: bridge